
project2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000006aa  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  0000071e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000006  00800060  00800060  0000071e  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000071e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000750  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000160  00000000  00000000  0000078c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000011d3  00000000  00000000  000008ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008c3  00000000  00000000  00001abf  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000bda  00000000  00000000  00002382  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000210  00000000  00000000  00002f5c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004fa  00000000  00000000  0000316c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000633  00000000  00000000  00003666  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000f0  00000000  00000000  00003c99  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__vector_1>
   8:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  28:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  2c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	20 e0       	ldi	r18, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	a6 36       	cpi	r26, 0x66	; 102
  6c:	b2 07       	cpc	r27, r18
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 e5 01 	call	0x3ca	; 0x3ca <main>
  74:	0c 94 53 03 	jmp	0x6a6	; 0x6a6 <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <ALL_Iitializations>:
}



void ALL_Iitializations(){
	LED_initialization();
  7c:	0e 94 b3 01 	call	0x366	; 0x366 <LED_initialization>
	button_initialization();
  80:	0e 94 9f 01 	call	0x33e	; 0x33e <button_initialization>
	int0_initialization();
  84:	0e 94 2f 03 	call	0x65e	; 0x65e <int0_initialization>
	timer0_initialization();
  88:	0e 94 4f 03 	call	0x69e	; 0x69e <timer0_initialization>
  8c:	08 95       	ret

0000008e <YELLOW_TOGGLE_5sec>:
}



void YELLOW_TOGGLE_5sec(){
	for(toggle=1;toggle<fiveSec;toggle++){
  8e:	81 e0       	ldi	r24, 0x01	; 1
  90:	80 93 65 00 	sts	0x0065, r24	; 0x800065 <toggle>
  94:	10 c0       	rjmp	.+32     	; 0xb6 <YELLOW_TOGGLE_5sec+0x28>
		LED_toggle(1,'A');
  96:	61 e4       	ldi	r22, 0x41	; 65
  98:	81 e0       	ldi	r24, 0x01	; 1
  9a:	0e 94 b0 01 	call	0x360	; 0x360 <LED_toggle>
		LED_toggle(1,'B');
  9e:	62 e4       	ldi	r22, 0x42	; 66
  a0:	81 e0       	ldi	r24, 0x01	; 1
  a2:	0e 94 b0 01 	call	0x360	; 0x360 <LED_toggle>
	delay(1);  
  a6:	81 e0       	ldi	r24, 0x01	; 1
  a8:	0e 94 37 03 	call	0x66e	; 0x66e <delay>
}



void YELLOW_TOGGLE_5sec(){
	for(toggle=1;toggle<fiveSec;toggle++){
  ac:	80 91 65 00 	lds	r24, 0x0065	; 0x800065 <toggle>
  b0:	8f 5f       	subi	r24, 0xFF	; 255
  b2:	80 93 65 00 	sts	0x0065, r24	; 0x800065 <toggle>
  b6:	80 91 65 00 	lds	r24, 0x0065	; 0x800065 <toggle>
  ba:	83 31       	cpi	r24, 0x13	; 19
  bc:	60 f3       	brcs	.-40     	; 0x96 <YELLOW_TOGGLE_5sec+0x8>
		LED_toggle(1,'A');
		LED_toggle(1,'B');
	delay(1);  
	}
	LED_OFF(1,'A');
  be:	61 e4       	ldi	r22, 0x41	; 65
  c0:	81 e0       	ldi	r24, 0x01	; 1
  c2:	0e 94 ac 01 	call	0x358	; 0x358 <LED_OFF>
	LED_OFF(1,'B');
  c6:	62 e4       	ldi	r22, 0x42	; 66
  c8:	81 e0       	ldi	r24, 0x01	; 1
  ca:	0e 94 ac 01 	call	0x358	; 0x358 <LED_OFF>
  ce:	08 95       	ret

000000d0 <__vector_1>:
}



ISR(INT0_vect){
  d0:	1f 92       	push	r1
  d2:	0f 92       	push	r0
  d4:	0f b6       	in	r0, 0x3f	; 63
  d6:	0f 92       	push	r0
  d8:	11 24       	eor	r1, r1
  da:	8f 93       	push	r24
  dc:	9f 93       	push	r25
	if(norped==0 && StudyCases!=3){
  de:	80 91 63 00 	lds	r24, 0x0063	; 0x800063 <norped>
  e2:	81 11       	cpse	r24, r1
  e4:	14 c0       	rjmp	.+40     	; 0x10e <__vector_1+0x3e>
  e6:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
  ea:	83 30       	cpi	r24, 0x03	; 3
  ec:	81 f0       	breq	.+32     	; 0x10e <__vector_1+0x3e>
		norped=1;
  ee:	91 e0       	ldi	r25, 0x01	; 1
  f0:	90 93 63 00 	sts	0x0063, r25	; 0x800063 <norped>
		memory=counter;
  f4:	90 91 64 00 	lds	r25, 0x0064	; 0x800064 <counter>
  f8:	90 93 62 00 	sts	0x0062, r25	; 0x800062 <memory>
		counter=128;
  fc:	90 e8       	ldi	r25, 0x80	; 128
  fe:	90 93 64 00 	sts	0x0064, r25	; 0x800064 <counter>
		toggle=100;
 102:	94 e6       	ldi	r25, 0x64	; 100
 104:	90 93 65 00 	sts	0x0065, r25	; 0x800065 <toggle>
		StudyCases--;
 108:	81 50       	subi	r24, 0x01	; 1
 10a:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
	}
}
 10e:	9f 91       	pop	r25
 110:	8f 91       	pop	r24
 112:	0f 90       	pop	r0
 114:	0f be       	out	0x3f, r0	; 63
 116:	0f 90       	pop	r0
 118:	1f 90       	pop	r1
 11a:	18 95       	reti

0000011c <Normal_MODE>:



void Normal_MODE(){
	switch(StudyCases){
 11c:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 120:	81 30       	cpi	r24, 0x01	; 1
 122:	a9 f0       	breq	.+42     	; 0x14e <Normal_MODE+0x32>
 124:	28 f0       	brcs	.+10     	; 0x130 <Normal_MODE+0x14>
 126:	82 30       	cpi	r24, 0x02	; 2
 128:	71 f1       	breq	.+92     	; 0x186 <Normal_MODE+0x6a>
 12a:	83 30       	cpi	r24, 0x03	; 3
 12c:	d9 f1       	breq	.+118    	; 0x1a4 <Normal_MODE+0x88>
 12e:	08 95       	ret
		
		case 0:
		StudyCases=1;
 130:	81 e0       	ldi	r24, 0x01	; 1
 132:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
		LED_ON(0,'A');
 136:	61 e4       	ldi	r22, 0x41	; 65
 138:	80 e0       	ldi	r24, 0x00	; 0
 13a:	0e 94 a8 01 	call	0x350	; 0x350 <LED_ON>
		//LED_ON(0,'B');
		delay(fiveSec);
 13e:	83 e1       	ldi	r24, 0x13	; 19
 140:	0e 94 37 03 	call	0x66e	; 0x66e <delay>
		LED_OFF(0,'A');
 144:	61 e4       	ldi	r22, 0x41	; 65
 146:	80 e0       	ldi	r24, 0x00	; 0
 148:	0e 94 ac 01 	call	0x358	; 0x358 <LED_OFF>
		//LED_OFF(0,'B');
		
		break;
 14c:	08 95       	ret
		
		case 1:
		StudyCases=2;
 14e:	82 e0       	ldi	r24, 0x02	; 2
 150:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
		for(toggle=1;toggle<=(fiveSec);toggle++){
 154:	81 e0       	ldi	r24, 0x01	; 1
 156:	80 93 65 00 	sts	0x0065, r24	; 0x800065 <toggle>
 15a:	0c c0       	rjmp	.+24     	; 0x174 <Normal_MODE+0x58>
			LED_toggle(1,'A');
 15c:	61 e4       	ldi	r22, 0x41	; 65
 15e:	81 e0       	ldi	r24, 0x01	; 1
 160:	0e 94 b0 01 	call	0x360	; 0x360 <LED_toggle>
			delay(1);
 164:	81 e0       	ldi	r24, 0x01	; 1
 166:	0e 94 37 03 	call	0x66e	; 0x66e <delay>
		
		break;
		
		case 1:
		StudyCases=2;
		for(toggle=1;toggle<=(fiveSec);toggle++){
 16a:	80 91 65 00 	lds	r24, 0x0065	; 0x800065 <toggle>
 16e:	8f 5f       	subi	r24, 0xFF	; 255
 170:	80 93 65 00 	sts	0x0065, r24	; 0x800065 <toggle>
 174:	80 91 65 00 	lds	r24, 0x0065	; 0x800065 <toggle>
 178:	84 31       	cpi	r24, 0x14	; 20
 17a:	80 f3       	brcs	.-32     	; 0x15c <Normal_MODE+0x40>
			LED_toggle(1,'A');
			delay(1);
		}
		LED_OFF(1,'A');
 17c:	61 e4       	ldi	r22, 0x41	; 65
 17e:	81 e0       	ldi	r24, 0x01	; 1
 180:	0e 94 ac 01 	call	0x358	; 0x358 <LED_OFF>
		break;
 184:	08 95       	ret
		
		case 2:
		StudyCases=3;
 186:	83 e0       	ldi	r24, 0x03	; 3
 188:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
		LED_ON(2,'A');
 18c:	61 e4       	ldi	r22, 0x41	; 65
 18e:	82 e0       	ldi	r24, 0x02	; 2
 190:	0e 94 a8 01 	call	0x350	; 0x350 <LED_ON>
		//LED_ON(2,'B');
		delay(fiveSec);
 194:	83 e1       	ldi	r24, 0x13	; 19
 196:	0e 94 37 03 	call	0x66e	; 0x66e <delay>
		LED_OFF(2,'A');
 19a:	61 e4       	ldi	r22, 0x41	; 65
 19c:	82 e0       	ldi	r24, 0x02	; 2
 19e:	0e 94 ac 01 	call	0x358	; 0x358 <LED_OFF>
		//LED_OFF(2,'B');
		
		break;
 1a2:	08 95       	ret

		case 3:
		StudyCases=4;
 1a4:	84 e0       	ldi	r24, 0x04	; 4
 1a6:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
		for(toggle=1;toggle<=(fiveSec);toggle++){
 1aa:	81 e0       	ldi	r24, 0x01	; 1
 1ac:	80 93 65 00 	sts	0x0065, r24	; 0x800065 <toggle>
 1b0:	0c c0       	rjmp	.+24     	; 0x1ca <Normal_MODE+0xae>
			LED_toggle(1,'A');
 1b2:	61 e4       	ldi	r22, 0x41	; 65
 1b4:	81 e0       	ldi	r24, 0x01	; 1
 1b6:	0e 94 b0 01 	call	0x360	; 0x360 <LED_toggle>
			delay(1);
 1ba:	81 e0       	ldi	r24, 0x01	; 1
 1bc:	0e 94 37 03 	call	0x66e	; 0x66e <delay>
		
		break;

		case 3:
		StudyCases=4;
		for(toggle=1;toggle<=(fiveSec);toggle++){
 1c0:	80 91 65 00 	lds	r24, 0x0065	; 0x800065 <toggle>
 1c4:	8f 5f       	subi	r24, 0xFF	; 255
 1c6:	80 93 65 00 	sts	0x0065, r24	; 0x800065 <toggle>
 1ca:	80 91 65 00 	lds	r24, 0x0065	; 0x800065 <toggle>
 1ce:	84 31       	cpi	r24, 0x14	; 20
 1d0:	80 f3       	brcs	.-32     	; 0x1b2 <Normal_MODE+0x96>
			LED_toggle(1,'A');
			delay(1);
		}
		LED_OFF(1,'A');
 1d2:	61 e4       	ldi	r22, 0x41	; 65
 1d4:	81 e0       	ldi	r24, 0x01	; 1
 1d6:	0e 94 ac 01 	call	0x358	; 0x358 <LED_OFF>
 1da:	08 95       	ret

000001dc <Pedestrian_MODE>:
}



void Pedestrian_MODE(){
	switch(StudyCases){
 1dc:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 1e0:	82 30       	cpi	r24, 0x02	; 2
 1e2:	b9 f0       	breq	.+46     	; 0x212 <Pedestrian_MODE+0x36>
 1e4:	28 f4       	brcc	.+10     	; 0x1f0 <Pedestrian_MODE+0x14>
 1e6:	88 23       	and	r24, r24
 1e8:	51 f0       	breq	.+20     	; 0x1fe <Pedestrian_MODE+0x22>
 1ea:	81 30       	cpi	r24, 0x01	; 1
 1ec:	61 f0       	breq	.+24     	; 0x206 <Pedestrian_MODE+0x2a>
 1ee:	08 95       	ret
 1f0:	84 30       	cpi	r24, 0x04	; 4
 1f2:	61 f1       	breq	.+88     	; 0x24c <Pedestrian_MODE+0x70>
 1f4:	08 f1       	brcs	.+66     	; 0x238 <Pedestrian_MODE+0x5c>
 1f6:	85 30       	cpi	r24, 0x05	; 5
 1f8:	09 f4       	brne	.+2      	; 0x1fc <Pedestrian_MODE+0x20>
 1fa:	41 c0       	rjmp	.+130    	; 0x27e <Pedestrian_MODE+0xa2>
 1fc:	08 95       	ret
		//LED_ON(0,'A');
		//LED_ON(0,'B');
		//delay(fiveSec-memory); 
		//LED_OFF(0,'A');
		//LED_OFF(0,'B');
		StudyCases=1;
 1fe:	81 e0       	ldi	r24, 0x01	; 1
 200:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
		break;
 204:	08 95       	ret

		case 1:
		YELLOW_TOGGLE_5sec();
 206:	0e 94 47 00 	call	0x8e	; 0x8e <YELLOW_TOGGLE_5sec>
		StudyCases=2;
 20a:	82 e0       	ldi	r24, 0x02	; 2
 20c:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
		break;
 210:	08 95       	ret
		
		case 2:
		LED_ON(2,'A');
 212:	61 e4       	ldi	r22, 0x41	; 65
 214:	82 e0       	ldi	r24, 0x02	; 2
 216:	0e 94 a8 01 	call	0x350	; 0x350 <LED_ON>
		LED_ON(2,'B');
 21a:	62 e4       	ldi	r22, 0x42	; 66
 21c:	82 e0       	ldi	r24, 0x02	; 2
 21e:	0e 94 a8 01 	call	0x350	; 0x350 <LED_ON>
		delay(fiveSec);
 222:	83 e1       	ldi	r24, 0x13	; 19
 224:	0e 94 37 03 	call	0x66e	; 0x66e <delay>
		LED_OFF(2,'A');
 228:	61 e4       	ldi	r22, 0x41	; 65
 22a:	82 e0       	ldi	r24, 0x02	; 2
 22c:	0e 94 ac 01 	call	0x358	; 0x358 <LED_OFF>
		StudyCases=3;
 230:	83 e0       	ldi	r24, 0x03	; 3
 232:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
		break;
 236:	08 95       	ret
		
		case 3:
		YELLOW_TOGGLE_5sec();
 238:	0e 94 47 00 	call	0x8e	; 0x8e <YELLOW_TOGGLE_5sec>
		LED_OFF(2,'B');
 23c:	62 e4       	ldi	r22, 0x42	; 66
 23e:	82 e0       	ldi	r24, 0x02	; 2
 240:	0e 94 ac 01 	call	0x358	; 0x358 <LED_OFF>
		StudyCases=4;
 244:	84 e0       	ldi	r24, 0x04	; 4
 246:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
		break;
 24a:	08 95       	ret
		
		
		case 4:
		LED_ON(0,'B');
 24c:	62 e4       	ldi	r22, 0x42	; 66
 24e:	80 e0       	ldi	r24, 0x00	; 0
 250:	0e 94 a8 01 	call	0x350	; 0x350 <LED_ON>
		LED_ON(0,'A');
 254:	61 e4       	ldi	r22, 0x41	; 65
 256:	80 e0       	ldi	r24, 0x00	; 0
 258:	0e 94 a8 01 	call	0x350	; 0x350 <LED_ON>
		delay(fiveSec);
 25c:	83 e1       	ldi	r24, 0x13	; 19
 25e:	0e 94 37 03 	call	0x66e	; 0x66e <delay>
		LED_OFF(0,'B');
 262:	62 e4       	ldi	r22, 0x42	; 66
 264:	80 e0       	ldi	r24, 0x00	; 0
 266:	0e 94 ac 01 	call	0x358	; 0x358 <LED_OFF>
		LED_OFF(0,'A');
 26a:	61 e4       	ldi	r22, 0x41	; 65
 26c:	80 e0       	ldi	r24, 0x00	; 0
 26e:	0e 94 ac 01 	call	0x358	; 0x358 <LED_OFF>
		norped=0;
 272:	10 92 63 00 	sts	0x0063, r1	; 0x800063 <norped>
		StudyCases=1;
 276:	81 e0       	ldi	r24, 0x01	; 1
 278:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
		break;
 27c:	08 95       	ret
		
		case 5:
		LED_ON(0,'B');
 27e:	62 e4       	ldi	r22, 0x42	; 66
 280:	80 e0       	ldi	r24, 0x00	; 0
 282:	0e 94 a8 01 	call	0x350	; 0x350 <LED_ON>
		for(toggle=1;toggle<=(fiveSec-memory);toggle++){
 286:	81 e0       	ldi	r24, 0x01	; 1
 288:	80 93 65 00 	sts	0x0065, r24	; 0x800065 <toggle>
 28c:	0c c0       	rjmp	.+24     	; 0x2a6 <Pedestrian_MODE+0xca>
			LED_toggle(1,'A');
 28e:	61 e4       	ldi	r22, 0x41	; 65
 290:	81 e0       	ldi	r24, 0x01	; 1
 292:	0e 94 b0 01 	call	0x360	; 0x360 <LED_toggle>
			delay(1);
 296:	81 e0       	ldi	r24, 0x01	; 1
 298:	0e 94 37 03 	call	0x66e	; 0x66e <delay>
		StudyCases=1;
		break;
		
		case 5:
		LED_ON(0,'B');
		for(toggle=1;toggle<=(fiveSec-memory);toggle++){
 29c:	80 91 65 00 	lds	r24, 0x0065	; 0x800065 <toggle>
 2a0:	8f 5f       	subi	r24, 0xFF	; 255
 2a2:	80 93 65 00 	sts	0x0065, r24	; 0x800065 <toggle>
 2a6:	20 91 65 00 	lds	r18, 0x0065	; 0x800065 <toggle>
 2aa:	30 e0       	ldi	r19, 0x00	; 0
 2ac:	40 91 62 00 	lds	r20, 0x0062	; 0x800062 <memory>
 2b0:	83 e1       	ldi	r24, 0x13	; 19
 2b2:	90 e0       	ldi	r25, 0x00	; 0
 2b4:	84 1b       	sub	r24, r20
 2b6:	91 09       	sbc	r25, r1
 2b8:	82 17       	cp	r24, r18
 2ba:	93 07       	cpc	r25, r19
 2bc:	44 f7       	brge	.-48     	; 0x28e <Pedestrian_MODE+0xb2>
			LED_toggle(1,'A');
			delay(1);
		}
		LED_OFF(0,'B');
 2be:	62 e4       	ldi	r22, 0x42	; 66
 2c0:	80 e0       	ldi	r24, 0x00	; 0
 2c2:	0e 94 ac 01 	call	0x358	; 0x358 <LED_OFF>
		LED_OFF(1,'A');
 2c6:	61 e4       	ldi	r22, 0x41	; 65
 2c8:	81 e0       	ldi	r24, 0x01	; 1
 2ca:	0e 94 ac 01 	call	0x358	; 0x358 <LED_OFF>
		StudyCases=1;
 2ce:	81 e0       	ldi	r24, 0x01	; 1
 2d0:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
 2d4:	08 95       	ret

000002d6 <APP>:
#include "app.h"

void APP(){
	ALL_Iitializations();
 2d6:	0e 94 3e 00 	call	0x7c	; 0x7c <ALL_Iitializations>
	norped=0;
 2da:	10 92 63 00 	sts	0x0063, r1	; 0x800063 <norped>
	StudyCases=0;
 2de:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
	while (1)
	{
		if(norped==0){
 2e2:	80 91 63 00 	lds	r24, 0x0063	; 0x800063 <norped>
 2e6:	81 11       	cpse	r24, r1
 2e8:	06 c0       	rjmp	.+12     	; 0x2f6 <APP+0x20>
			bool=1;
 2ea:	81 e0       	ldi	r24, 0x01	; 1
 2ec:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <bool>
			Normal_MODE();
 2f0:	0e 94 8e 00 	call	0x11c	; 0x11c <Normal_MODE>
 2f4:	15 c0       	rjmp	.+42     	; 0x320 <APP+0x4a>
		}
		else if (norped==1){
 2f6:	81 30       	cpi	r24, 0x01	; 1
 2f8:	99 f4       	brne	.+38     	; 0x320 <APP+0x4a>
			if((StudyCases==1 || StudyCases==3)&& bool==1){
 2fa:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 2fe:	81 30       	cpi	r24, 0x01	; 1
 300:	11 f0       	breq	.+4      	; 0x306 <APP+0x30>
 302:	83 30       	cpi	r24, 0x03	; 3
 304:	39 f4       	brne	.+14     	; 0x314 <APP+0x3e>
 306:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <bool>
 30a:	81 30       	cpi	r24, 0x01	; 1
 30c:	19 f4       	brne	.+6      	; 0x314 <APP+0x3e>
				StudyCases=5;
 30e:	85 e0       	ldi	r24, 0x05	; 5
 310:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
			}
			bool=0;
 314:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <bool>
			ALL_LEDS_OFF();
 318:	0e 94 cc 01 	call	0x398	; 0x398 <ALL_LEDS_OFF>
			Pedestrian_MODE();
 31c:	0e 94 ee 00 	call	0x1dc	; 0x1dc <Pedestrian_MODE>
		}
		
		if(StudyCases==4 && norped==0){
 320:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 324:	84 30       	cpi	r24, 0x04	; 4
 326:	e9 f6       	brne	.-70     	; 0x2e2 <APP+0xc>
 328:	80 91 63 00 	lds	r24, 0x0063	; 0x800063 <norped>
 32c:	81 11       	cpse	r24, r1
 32e:	d9 cf       	rjmp	.-78     	; 0x2e2 <APP+0xc>
			StudyCases=0;
 330:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
 334:	d6 cf       	rjmp	.-84     	; 0x2e2 <APP+0xc>

00000336 <button_init>:
void button_init (uint8_t pin,uint8_t port){
	GPIO_init(pin,port,INPUT);
}

void button_read(uint8_t pin,uint8_t port, uint8_t*value){
	GPIO_read(pin,port,value);
 336:	40 e0       	ldi	r20, 0x00	; 0
 338:	0e 94 ea 01 	call	0x3d4	; 0x3d4 <GPIO_init>
 33c:	08 95       	ret

0000033e <button_initialization>:
}

void button_initialization(){
	button_init(2,'D');
 33e:	64 e4       	ldi	r22, 0x44	; 68
 340:	82 e0       	ldi	r24, 0x02	; 2
 342:	0e 94 9b 01 	call	0x336	; 0x336 <button_init>
 346:	08 95       	ret

00000348 <LED_init>:
#include "LED.h"

void LED_init(uint8_t pin,uint8_t port){
	GPIO_init(pin,port,OUTPUT);
 348:	41 e0       	ldi	r20, 0x01	; 1
 34a:	0e 94 ea 01 	call	0x3d4	; 0x3d4 <GPIO_init>
 34e:	08 95       	ret

00000350 <LED_ON>:
}

void LED_ON(uint8_t pin,uint8_t port){
	GPIO_write(pin,port,HIGH);
 350:	41 e0       	ldi	r20, 0x01	; 1
 352:	0e 94 6d 02 	call	0x4da	; 0x4da <GPIO_write>
 356:	08 95       	ret

00000358 <LED_OFF>:
}

void LED_OFF(uint8_t pin,uint8_t port){
	GPIO_write(pin,port,LOW);
 358:	40 e0       	ldi	r20, 0x00	; 0
 35a:	0e 94 6d 02 	call	0x4da	; 0x4da <GPIO_write>
 35e:	08 95       	ret

00000360 <LED_toggle>:
}

void LED_toggle(uint8_t pin,uint8_t port){
	GPIO_toggle(pin,port);
 360:	0e 94 f0 02 	call	0x5e0	; 0x5e0 <GPIO_toggle>
 364:	08 95       	ret

00000366 <LED_initialization>:
}

void LED_initialization(){
	LED_init(0,'A');
 366:	61 e4       	ldi	r22, 0x41	; 65
 368:	80 e0       	ldi	r24, 0x00	; 0
 36a:	0e 94 a4 01 	call	0x348	; 0x348 <LED_init>
	LED_init(1,'A');
 36e:	61 e4       	ldi	r22, 0x41	; 65
 370:	81 e0       	ldi	r24, 0x01	; 1
 372:	0e 94 a4 01 	call	0x348	; 0x348 <LED_init>
	LED_init(2,'A');
 376:	61 e4       	ldi	r22, 0x41	; 65
 378:	82 e0       	ldi	r24, 0x02	; 2
 37a:	0e 94 a4 01 	call	0x348	; 0x348 <LED_init>
	LED_init(0,'B');
 37e:	62 e4       	ldi	r22, 0x42	; 66
 380:	80 e0       	ldi	r24, 0x00	; 0
 382:	0e 94 a4 01 	call	0x348	; 0x348 <LED_init>
	LED_init(1,'B');
 386:	62 e4       	ldi	r22, 0x42	; 66
 388:	81 e0       	ldi	r24, 0x01	; 1
 38a:	0e 94 a4 01 	call	0x348	; 0x348 <LED_init>
	LED_init(2,'B');
 38e:	62 e4       	ldi	r22, 0x42	; 66
 390:	82 e0       	ldi	r24, 0x02	; 2
 392:	0e 94 a4 01 	call	0x348	; 0x348 <LED_init>
 396:	08 95       	ret

00000398 <ALL_LEDS_OFF>:
}

void ALL_LEDS_OFF(){
	LED_OFF(0,'A');
 398:	61 e4       	ldi	r22, 0x41	; 65
 39a:	80 e0       	ldi	r24, 0x00	; 0
 39c:	0e 94 ac 01 	call	0x358	; 0x358 <LED_OFF>
	LED_OFF(1,'A');
 3a0:	61 e4       	ldi	r22, 0x41	; 65
 3a2:	81 e0       	ldi	r24, 0x01	; 1
 3a4:	0e 94 ac 01 	call	0x358	; 0x358 <LED_OFF>
	LED_OFF(2,'A');
 3a8:	61 e4       	ldi	r22, 0x41	; 65
 3aa:	82 e0       	ldi	r24, 0x02	; 2
 3ac:	0e 94 ac 01 	call	0x358	; 0x358 <LED_OFF>
	LED_OFF(0,'B');
 3b0:	62 e4       	ldi	r22, 0x42	; 66
 3b2:	80 e0       	ldi	r24, 0x00	; 0
 3b4:	0e 94 ac 01 	call	0x358	; 0x358 <LED_OFF>
	LED_OFF(1,'B');
 3b8:	62 e4       	ldi	r22, 0x42	; 66
 3ba:	81 e0       	ldi	r24, 0x01	; 1
 3bc:	0e 94 ac 01 	call	0x358	; 0x358 <LED_OFF>
	LED_OFF(2,'B');
 3c0:	62 e4       	ldi	r22, 0x42	; 66
 3c2:	82 e0       	ldi	r24, 0x02	; 2
 3c4:	0e 94 ac 01 	call	0x358	; 0x358 <LED_OFF>
 3c8:	08 95       	ret

000003ca <main>:
#include "APPLICATION/app.h"

int main(void){
	APP();
 3ca:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <APP>
 3ce:	80 e0       	ldi	r24, 0x00	; 0
 3d0:	90 e0       	ldi	r25, 0x00	; 0
 3d2:	08 95       	ret

000003d4 <GPIO_init>:
		break;
		case 'C' :
		*value = PINC &(1<<pin)>>pin;
		break;
		case 'D' :
		*value = PIND &(1<<pin)>>pin;
 3d4:	62 34       	cpi	r22, 0x42	; 66
 3d6:	49 f1       	breq	.+82     	; 0x42a <__EEPROM_REGION_LENGTH__+0x2a>
 3d8:	18 f4       	brcc	.+6      	; 0x3e0 <GPIO_init+0xc>
 3da:	61 34       	cpi	r22, 0x41	; 65
 3dc:	41 f0       	breq	.+16     	; 0x3ee <GPIO_init+0x1a>
 3de:	08 95       	ret
 3e0:	63 34       	cpi	r22, 0x43	; 67
 3e2:	09 f4       	brne	.+2      	; 0x3e6 <GPIO_init+0x12>
 3e4:	40 c0       	rjmp	.+128    	; 0x466 <__EEPROM_REGION_LENGTH__+0x66>
 3e6:	64 34       	cpi	r22, 0x44	; 68
 3e8:	09 f4       	brne	.+2      	; 0x3ec <GPIO_init+0x18>
 3ea:	5a c0       	rjmp	.+180    	; 0x4a0 <__EEPROM_REGION_LENGTH__+0xa0>
 3ec:	08 95       	ret
 3ee:	41 11       	cpse	r20, r1
 3f0:	0c c0       	rjmp	.+24     	; 0x40a <__EEPROM_REGION_LENGTH__+0xa>
 3f2:	9a b3       	in	r25, 0x1a	; 26
 3f4:	21 e0       	ldi	r18, 0x01	; 1
 3f6:	30 e0       	ldi	r19, 0x00	; 0
 3f8:	08 2e       	mov	r0, r24
 3fa:	02 c0       	rjmp	.+4      	; 0x400 <__EEPROM_REGION_LENGTH__>
 3fc:	22 0f       	add	r18, r18
 3fe:	33 1f       	adc	r19, r19
 400:	0a 94       	dec	r0
 402:	e2 f7       	brpl	.-8      	; 0x3fc <GPIO_init+0x28>
 404:	20 95       	com	r18
 406:	29 23       	and	r18, r25
 408:	2a bb       	out	0x1a, r18	; 26
 40a:	41 30       	cpi	r20, 0x01	; 1
 40c:	09 f0       	breq	.+2      	; 0x410 <__EEPROM_REGION_LENGTH__+0x10>
 40e:	64 c0       	rjmp	.+200    	; 0x4d8 <__EEPROM_REGION_LENGTH__+0xd8>
 410:	4a b3       	in	r20, 0x1a	; 26
 412:	21 e0       	ldi	r18, 0x01	; 1
 414:	30 e0       	ldi	r19, 0x00	; 0
 416:	b9 01       	movw	r22, r18
 418:	02 c0       	rjmp	.+4      	; 0x41e <__EEPROM_REGION_LENGTH__+0x1e>
 41a:	66 0f       	add	r22, r22
 41c:	77 1f       	adc	r23, r23
 41e:	8a 95       	dec	r24
 420:	e2 f7       	brpl	.-8      	; 0x41a <__EEPROM_REGION_LENGTH__+0x1a>
 422:	cb 01       	movw	r24, r22
 424:	84 2b       	or	r24, r20
 426:	8a bb       	out	0x1a, r24	; 26
 428:	08 95       	ret
 42a:	41 11       	cpse	r20, r1
 42c:	0c c0       	rjmp	.+24     	; 0x446 <__EEPROM_REGION_LENGTH__+0x46>
 42e:	97 b3       	in	r25, 0x17	; 23
 430:	21 e0       	ldi	r18, 0x01	; 1
 432:	30 e0       	ldi	r19, 0x00	; 0
 434:	08 2e       	mov	r0, r24
 436:	02 c0       	rjmp	.+4      	; 0x43c <__EEPROM_REGION_LENGTH__+0x3c>
 438:	22 0f       	add	r18, r18
 43a:	33 1f       	adc	r19, r19
 43c:	0a 94       	dec	r0
 43e:	e2 f7       	brpl	.-8      	; 0x438 <__EEPROM_REGION_LENGTH__+0x38>
 440:	20 95       	com	r18
 442:	29 23       	and	r18, r25
 444:	27 bb       	out	0x17, r18	; 23
 446:	41 30       	cpi	r20, 0x01	; 1
 448:	09 f0       	breq	.+2      	; 0x44c <__EEPROM_REGION_LENGTH__+0x4c>
 44a:	46 c0       	rjmp	.+140    	; 0x4d8 <__EEPROM_REGION_LENGTH__+0xd8>
 44c:	47 b3       	in	r20, 0x17	; 23
 44e:	21 e0       	ldi	r18, 0x01	; 1
 450:	30 e0       	ldi	r19, 0x00	; 0
 452:	b9 01       	movw	r22, r18
 454:	02 c0       	rjmp	.+4      	; 0x45a <__EEPROM_REGION_LENGTH__+0x5a>
 456:	66 0f       	add	r22, r22
 458:	77 1f       	adc	r23, r23
 45a:	8a 95       	dec	r24
 45c:	e2 f7       	brpl	.-8      	; 0x456 <__EEPROM_REGION_LENGTH__+0x56>
 45e:	cb 01       	movw	r24, r22
 460:	84 2b       	or	r24, r20
 462:	87 bb       	out	0x17, r24	; 23
 464:	08 95       	ret
 466:	41 11       	cpse	r20, r1
 468:	0c c0       	rjmp	.+24     	; 0x482 <__EEPROM_REGION_LENGTH__+0x82>
 46a:	94 b3       	in	r25, 0x14	; 20
 46c:	21 e0       	ldi	r18, 0x01	; 1
 46e:	30 e0       	ldi	r19, 0x00	; 0
 470:	08 2e       	mov	r0, r24
 472:	02 c0       	rjmp	.+4      	; 0x478 <__EEPROM_REGION_LENGTH__+0x78>
 474:	22 0f       	add	r18, r18
 476:	33 1f       	adc	r19, r19
 478:	0a 94       	dec	r0
 47a:	e2 f7       	brpl	.-8      	; 0x474 <__EEPROM_REGION_LENGTH__+0x74>
 47c:	20 95       	com	r18
 47e:	29 23       	and	r18, r25
 480:	24 bb       	out	0x14, r18	; 20
 482:	41 30       	cpi	r20, 0x01	; 1
 484:	49 f5       	brne	.+82     	; 0x4d8 <__EEPROM_REGION_LENGTH__+0xd8>
 486:	44 b3       	in	r20, 0x14	; 20
 488:	21 e0       	ldi	r18, 0x01	; 1
 48a:	30 e0       	ldi	r19, 0x00	; 0
 48c:	b9 01       	movw	r22, r18
 48e:	02 c0       	rjmp	.+4      	; 0x494 <__EEPROM_REGION_LENGTH__+0x94>
 490:	66 0f       	add	r22, r22
 492:	77 1f       	adc	r23, r23
 494:	8a 95       	dec	r24
 496:	e2 f7       	brpl	.-8      	; 0x490 <__EEPROM_REGION_LENGTH__+0x90>
 498:	cb 01       	movw	r24, r22
 49a:	84 2b       	or	r24, r20
 49c:	84 bb       	out	0x14, r24	; 20
 49e:	08 95       	ret
 4a0:	41 11       	cpse	r20, r1
 4a2:	0c c0       	rjmp	.+24     	; 0x4bc <__EEPROM_REGION_LENGTH__+0xbc>
 4a4:	91 b3       	in	r25, 0x11	; 17
 4a6:	21 e0       	ldi	r18, 0x01	; 1
 4a8:	30 e0       	ldi	r19, 0x00	; 0
 4aa:	08 2e       	mov	r0, r24
 4ac:	02 c0       	rjmp	.+4      	; 0x4b2 <__EEPROM_REGION_LENGTH__+0xb2>
 4ae:	22 0f       	add	r18, r18
 4b0:	33 1f       	adc	r19, r19
 4b2:	0a 94       	dec	r0
 4b4:	e2 f7       	brpl	.-8      	; 0x4ae <__EEPROM_REGION_LENGTH__+0xae>
 4b6:	20 95       	com	r18
 4b8:	29 23       	and	r18, r25
 4ba:	21 bb       	out	0x11, r18	; 17
 4bc:	41 30       	cpi	r20, 0x01	; 1
 4be:	61 f4       	brne	.+24     	; 0x4d8 <__EEPROM_REGION_LENGTH__+0xd8>
 4c0:	41 b3       	in	r20, 0x11	; 17
 4c2:	21 e0       	ldi	r18, 0x01	; 1
 4c4:	30 e0       	ldi	r19, 0x00	; 0
 4c6:	b9 01       	movw	r22, r18
 4c8:	02 c0       	rjmp	.+4      	; 0x4ce <__EEPROM_REGION_LENGTH__+0xce>
 4ca:	66 0f       	add	r22, r22
 4cc:	77 1f       	adc	r23, r23
 4ce:	8a 95       	dec	r24
 4d0:	e2 f7       	brpl	.-8      	; 0x4ca <__EEPROM_REGION_LENGTH__+0xca>
 4d2:	cb 01       	movw	r24, r22
 4d4:	84 2b       	or	r24, r20
 4d6:	81 bb       	out	0x11, r24	; 17
 4d8:	08 95       	ret

000004da <GPIO_write>:
 4da:	62 34       	cpi	r22, 0x42	; 66
 4dc:	49 f1       	breq	.+82     	; 0x530 <GPIO_write+0x56>
 4de:	18 f4       	brcc	.+6      	; 0x4e6 <GPIO_write+0xc>
 4e0:	61 34       	cpi	r22, 0x41	; 65
 4e2:	41 f0       	breq	.+16     	; 0x4f4 <GPIO_write+0x1a>
 4e4:	08 95       	ret
 4e6:	63 34       	cpi	r22, 0x43	; 67
 4e8:	09 f4       	brne	.+2      	; 0x4ec <GPIO_write+0x12>
 4ea:	40 c0       	rjmp	.+128    	; 0x56c <GPIO_write+0x92>
 4ec:	64 34       	cpi	r22, 0x44	; 68
 4ee:	09 f4       	brne	.+2      	; 0x4f2 <GPIO_write+0x18>
 4f0:	5a c0       	rjmp	.+180    	; 0x5a6 <GPIO_write+0xcc>
 4f2:	08 95       	ret
 4f4:	41 11       	cpse	r20, r1
 4f6:	0c c0       	rjmp	.+24     	; 0x510 <GPIO_write+0x36>
 4f8:	9b b3       	in	r25, 0x1b	; 27
 4fa:	21 e0       	ldi	r18, 0x01	; 1
 4fc:	30 e0       	ldi	r19, 0x00	; 0
 4fe:	08 2e       	mov	r0, r24
 500:	02 c0       	rjmp	.+4      	; 0x506 <GPIO_write+0x2c>
 502:	22 0f       	add	r18, r18
 504:	33 1f       	adc	r19, r19
 506:	0a 94       	dec	r0
 508:	e2 f7       	brpl	.-8      	; 0x502 <GPIO_write+0x28>
 50a:	20 95       	com	r18
 50c:	29 23       	and	r18, r25
 50e:	2b bb       	out	0x1b, r18	; 27
 510:	41 30       	cpi	r20, 0x01	; 1
 512:	09 f0       	breq	.+2      	; 0x516 <GPIO_write+0x3c>
 514:	64 c0       	rjmp	.+200    	; 0x5de <GPIO_write+0x104>
 516:	4b b3       	in	r20, 0x1b	; 27
 518:	21 e0       	ldi	r18, 0x01	; 1
 51a:	30 e0       	ldi	r19, 0x00	; 0
 51c:	b9 01       	movw	r22, r18
 51e:	02 c0       	rjmp	.+4      	; 0x524 <GPIO_write+0x4a>
 520:	66 0f       	add	r22, r22
 522:	77 1f       	adc	r23, r23
 524:	8a 95       	dec	r24
 526:	e2 f7       	brpl	.-8      	; 0x520 <GPIO_write+0x46>
 528:	cb 01       	movw	r24, r22
 52a:	84 2b       	or	r24, r20
 52c:	8b bb       	out	0x1b, r24	; 27
 52e:	08 95       	ret
 530:	41 11       	cpse	r20, r1
 532:	0c c0       	rjmp	.+24     	; 0x54c <GPIO_write+0x72>
 534:	98 b3       	in	r25, 0x18	; 24
 536:	21 e0       	ldi	r18, 0x01	; 1
 538:	30 e0       	ldi	r19, 0x00	; 0
 53a:	08 2e       	mov	r0, r24
 53c:	02 c0       	rjmp	.+4      	; 0x542 <GPIO_write+0x68>
 53e:	22 0f       	add	r18, r18
 540:	33 1f       	adc	r19, r19
 542:	0a 94       	dec	r0
 544:	e2 f7       	brpl	.-8      	; 0x53e <GPIO_write+0x64>
 546:	20 95       	com	r18
 548:	29 23       	and	r18, r25
 54a:	28 bb       	out	0x18, r18	; 24
 54c:	41 30       	cpi	r20, 0x01	; 1
 54e:	09 f0       	breq	.+2      	; 0x552 <GPIO_write+0x78>
 550:	46 c0       	rjmp	.+140    	; 0x5de <GPIO_write+0x104>
 552:	48 b3       	in	r20, 0x18	; 24
 554:	21 e0       	ldi	r18, 0x01	; 1
 556:	30 e0       	ldi	r19, 0x00	; 0
 558:	b9 01       	movw	r22, r18
 55a:	02 c0       	rjmp	.+4      	; 0x560 <GPIO_write+0x86>
 55c:	66 0f       	add	r22, r22
 55e:	77 1f       	adc	r23, r23
 560:	8a 95       	dec	r24
 562:	e2 f7       	brpl	.-8      	; 0x55c <GPIO_write+0x82>
 564:	cb 01       	movw	r24, r22
 566:	84 2b       	or	r24, r20
 568:	88 bb       	out	0x18, r24	; 24
 56a:	08 95       	ret
 56c:	41 11       	cpse	r20, r1
 56e:	0c c0       	rjmp	.+24     	; 0x588 <GPIO_write+0xae>
 570:	95 b3       	in	r25, 0x15	; 21
 572:	21 e0       	ldi	r18, 0x01	; 1
 574:	30 e0       	ldi	r19, 0x00	; 0
 576:	08 2e       	mov	r0, r24
 578:	02 c0       	rjmp	.+4      	; 0x57e <GPIO_write+0xa4>
 57a:	22 0f       	add	r18, r18
 57c:	33 1f       	adc	r19, r19
 57e:	0a 94       	dec	r0
 580:	e2 f7       	brpl	.-8      	; 0x57a <GPIO_write+0xa0>
 582:	20 95       	com	r18
 584:	29 23       	and	r18, r25
 586:	25 bb       	out	0x15, r18	; 21
 588:	41 30       	cpi	r20, 0x01	; 1
 58a:	49 f5       	brne	.+82     	; 0x5de <GPIO_write+0x104>
 58c:	45 b3       	in	r20, 0x15	; 21
 58e:	21 e0       	ldi	r18, 0x01	; 1
 590:	30 e0       	ldi	r19, 0x00	; 0
 592:	b9 01       	movw	r22, r18
 594:	02 c0       	rjmp	.+4      	; 0x59a <GPIO_write+0xc0>
 596:	66 0f       	add	r22, r22
 598:	77 1f       	adc	r23, r23
 59a:	8a 95       	dec	r24
 59c:	e2 f7       	brpl	.-8      	; 0x596 <GPIO_write+0xbc>
 59e:	cb 01       	movw	r24, r22
 5a0:	84 2b       	or	r24, r20
 5a2:	85 bb       	out	0x15, r24	; 21
 5a4:	08 95       	ret
 5a6:	41 11       	cpse	r20, r1
 5a8:	0c c0       	rjmp	.+24     	; 0x5c2 <GPIO_write+0xe8>
 5aa:	92 b3       	in	r25, 0x12	; 18
 5ac:	21 e0       	ldi	r18, 0x01	; 1
 5ae:	30 e0       	ldi	r19, 0x00	; 0
 5b0:	08 2e       	mov	r0, r24
 5b2:	02 c0       	rjmp	.+4      	; 0x5b8 <GPIO_write+0xde>
 5b4:	22 0f       	add	r18, r18
 5b6:	33 1f       	adc	r19, r19
 5b8:	0a 94       	dec	r0
 5ba:	e2 f7       	brpl	.-8      	; 0x5b4 <GPIO_write+0xda>
 5bc:	20 95       	com	r18
 5be:	29 23       	and	r18, r25
 5c0:	22 bb       	out	0x12, r18	; 18
 5c2:	41 30       	cpi	r20, 0x01	; 1
 5c4:	61 f4       	brne	.+24     	; 0x5de <GPIO_write+0x104>
 5c6:	42 b3       	in	r20, 0x12	; 18
 5c8:	21 e0       	ldi	r18, 0x01	; 1
 5ca:	30 e0       	ldi	r19, 0x00	; 0
 5cc:	b9 01       	movw	r22, r18
 5ce:	02 c0       	rjmp	.+4      	; 0x5d4 <GPIO_write+0xfa>
 5d0:	66 0f       	add	r22, r22
 5d2:	77 1f       	adc	r23, r23
 5d4:	8a 95       	dec	r24
 5d6:	e2 f7       	brpl	.-8      	; 0x5d0 <GPIO_write+0xf6>
 5d8:	cb 01       	movw	r24, r22
 5da:	84 2b       	or	r24, r20
 5dc:	82 bb       	out	0x12, r24	; 18
 5de:	08 95       	ret

000005e0 <GPIO_toggle>:
		break;
	}
}

void GPIO_toggle(uint8_t pin,uint8_t port){
	switch(port){
 5e0:	62 34       	cpi	r22, 0x42	; 66
 5e2:	b1 f0       	breq	.+44     	; 0x610 <GPIO_toggle+0x30>
 5e4:	18 f4       	brcc	.+6      	; 0x5ec <GPIO_toggle+0xc>
 5e6:	61 34       	cpi	r22, 0x41	; 65
 5e8:	31 f0       	breq	.+12     	; 0x5f6 <GPIO_toggle+0x16>
 5ea:	08 95       	ret
 5ec:	63 34       	cpi	r22, 0x43	; 67
 5ee:	e9 f0       	breq	.+58     	; 0x62a <GPIO_toggle+0x4a>
 5f0:	64 34       	cpi	r22, 0x44	; 68
 5f2:	41 f1       	breq	.+80     	; 0x644 <GPIO_toggle+0x64>
 5f4:	08 95       	ret
		case 'A' :
		PORTA ^= (1<<pin);
 5f6:	4b b3       	in	r20, 0x1b	; 27
 5f8:	21 e0       	ldi	r18, 0x01	; 1
 5fa:	30 e0       	ldi	r19, 0x00	; 0
 5fc:	b9 01       	movw	r22, r18
 5fe:	02 c0       	rjmp	.+4      	; 0x604 <GPIO_toggle+0x24>
 600:	66 0f       	add	r22, r22
 602:	77 1f       	adc	r23, r23
 604:	8a 95       	dec	r24
 606:	e2 f7       	brpl	.-8      	; 0x600 <GPIO_toggle+0x20>
 608:	cb 01       	movw	r24, r22
 60a:	84 27       	eor	r24, r20
 60c:	8b bb       	out	0x1b, r24	; 27
		break;
 60e:	08 95       	ret
		case 'B' :
		PORTB ^= (1<<pin);
 610:	48 b3       	in	r20, 0x18	; 24
 612:	21 e0       	ldi	r18, 0x01	; 1
 614:	30 e0       	ldi	r19, 0x00	; 0
 616:	b9 01       	movw	r22, r18
 618:	02 c0       	rjmp	.+4      	; 0x61e <GPIO_toggle+0x3e>
 61a:	66 0f       	add	r22, r22
 61c:	77 1f       	adc	r23, r23
 61e:	8a 95       	dec	r24
 620:	e2 f7       	brpl	.-8      	; 0x61a <GPIO_toggle+0x3a>
 622:	cb 01       	movw	r24, r22
 624:	84 27       	eor	r24, r20
 626:	88 bb       	out	0x18, r24	; 24
		break;
 628:	08 95       	ret
		case 'C' :
		PORTC ^= (1<<pin);
 62a:	45 b3       	in	r20, 0x15	; 21
 62c:	21 e0       	ldi	r18, 0x01	; 1
 62e:	30 e0       	ldi	r19, 0x00	; 0
 630:	b9 01       	movw	r22, r18
 632:	02 c0       	rjmp	.+4      	; 0x638 <GPIO_toggle+0x58>
 634:	66 0f       	add	r22, r22
 636:	77 1f       	adc	r23, r23
 638:	8a 95       	dec	r24
 63a:	e2 f7       	brpl	.-8      	; 0x634 <GPIO_toggle+0x54>
 63c:	cb 01       	movw	r24, r22
 63e:	84 27       	eor	r24, r20
 640:	85 bb       	out	0x15, r24	; 21
		break;
 642:	08 95       	ret
		case 'D' :
		PORTD ^= (1<<pin);
 644:	42 b3       	in	r20, 0x12	; 18
 646:	21 e0       	ldi	r18, 0x01	; 1
 648:	30 e0       	ldi	r19, 0x00	; 0
 64a:	b9 01       	movw	r22, r18
 64c:	02 c0       	rjmp	.+4      	; 0x652 <GPIO_toggle+0x72>
 64e:	66 0f       	add	r22, r22
 650:	77 1f       	adc	r23, r23
 652:	8a 95       	dec	r24
 654:	e2 f7       	brpl	.-8      	; 0x64e <GPIO_toggle+0x6e>
 656:	cb 01       	movw	r24, r22
 658:	84 27       	eor	r24, r20
 65a:	82 bb       	out	0x12, r24	; 18
 65c:	08 95       	ret

0000065e <int0_initialization>:
 65e:	78 94       	sei
 660:	85 b7       	in	r24, 0x35	; 53
 662:	83 60       	ori	r24, 0x03	; 3
 664:	85 bf       	out	0x35, r24	; 53
 666:	8b b7       	in	r24, 0x3b	; 59
 668:	80 64       	ori	r24, 0x40	; 64
 66a:	8b bf       	out	0x3b, r24	; 59
 66c:	08 95       	ret

0000066e <delay>:
 66e:	91 e0       	ldi	r25, 0x01	; 1
 670:	90 93 64 00 	sts	0x0064, r25	; 0x800064 <counter>
 674:	93 b7       	in	r25, 0x33	; 51
 676:	95 60       	ori	r25, 0x05	; 5
 678:	93 bf       	out	0x33, r25	; 51
 67a:	0b c0       	rjmp	.+22     	; 0x692 <delay+0x24>
 67c:	08 b6       	in	r0, 0x38	; 56
 67e:	00 fe       	sbrs	r0, 0
 680:	fd cf       	rjmp	.-6      	; 0x67c <delay+0xe>
 682:	98 b7       	in	r25, 0x38	; 56
 684:	91 60       	ori	r25, 0x01	; 1
 686:	98 bf       	out	0x38, r25	; 56
 688:	90 91 64 00 	lds	r25, 0x0064	; 0x800064 <counter>
 68c:	9f 5f       	subi	r25, 0xFF	; 255
 68e:	90 93 64 00 	sts	0x0064, r25	; 0x800064 <counter>
 692:	90 91 64 00 	lds	r25, 0x0064	; 0x800064 <counter>
 696:	89 17       	cp	r24, r25
 698:	88 f7       	brcc	.-30     	; 0x67c <delay+0xe>
 69a:	13 be       	out	0x33, r1	; 51
 69c:	08 95       	ret

0000069e <timer0_initialization>:
 69e:	13 be       	out	0x33, r1	; 51
 6a0:	8c e0       	ldi	r24, 0x0C	; 12
 6a2:	82 bf       	out	0x32, r24	; 50
 6a4:	08 95       	ret

000006a6 <_exit>:
 6a6:	f8 94       	cli

000006a8 <__stop_program>:
 6a8:	ff cf       	rjmp	.-2      	; 0x6a8 <__stop_program>
